CS464 Final Project
Touch Screen Viability and Tactile Feedback in Video Game Controls
Anthony Sargent

For my project I wanted to compare touch controls to physical controls with tactile feedback in video games. I love video games and never had an opportunity to make one before so I figured now would be a good chance to try to make a simple one to see how it's done. I used GameMaker Studio 2 because I got it a long time ago and heard it's a good program for people new to making video games. They use their own programming language called GML that is actually pretty similar to java which I know very well. Since this was my first time using it, it took a while to figure out how everything works and interacts and it was fairly challenging at first. Yet the more I tinkered with it and studied how it works it got easier. It was a challenge, but a welcome one and I found it fun in the long run.

One of the larger hurdles for my prototype was learning how to get it to compile into an .apk file that could be installed on android devices. After some reasearch and lots of trial and error I got it to work. I ended up downloading Android Studio that installed all the files I needed. Then to compile the game into an .apk file all I had to do was have Android Studio open when creating the build in GameMaker Studio. 

Another difficulty was getting it to work with a physical device. Originally I planned to use a controller yet my tablet had no port to plug any of the ones I own in, and my only wireless controllers are PlayStation 5 controllers which I could not get to connect to my tablet. In the end I decided that keyboard is still a viable control scheme with tactile feedback, especially since the game was just a simple platformer wher only three buttons; left, right, and jump were needed. The touch controls were actually pretty simple to incorporate. GameMaker had build in gesture options like tap that made programming the touch controls pretty simple.

I also wanted to code a Jupyter Notebook to handle all the data calculations. I feel that I had enough coding with the game making itself yet I wanted to do the Jupyter Notebook because I like coding and I wanted to show more skills in it. I used Jupyter Notebook and data manipulation a lot in cs345 before so I was already comfortable doing it but it was still a lot of work and took my a long time to do.

The report was the hardest part of the project for me as I don't think I'm the best technical writer, yet I feel like I did well in it. I tried to make it as short as possible yet with all the work I did in everything there was a lot to discuss. The page count excluding the references section ended up being about 7 1/2 pages. I easily spent the longest amount of time working on this. A big difficulty was most of it had to wait for my game to be finished, for my participants to do the experiment, and for my Jupyter Notebook code to get results. Due to how long everything took I was only able to get 10 participants and I wish I was able to get more. The 10 participants I was able to get was my fiance, my 2 sisters, 3 friends in my cs320 class, and 4 coworkers from my home depot tool rental department. I wanted more but due to time contraints and having to work on the Jupyter Notebook and report portion I had to stop trials to get these done.

Overall, I found this to be one of the longest projects I worked the hardest on and it was a struggle working on all of this while taking 4 computer science classes, working full time, and planning my mid May marriage and honey moon. It has possibly been the most stressful time of my entire life and it has been quite the journey to say the least. I feel I put in as much an effort as possible given everything going on, and hopefully it shows in the final submission.

